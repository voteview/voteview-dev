; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    doc,
    report

[testenv]
skip_install=true
docker =
       mongo
dockerenv =
     VVCLI_DB_NAME=voteviewtest

setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    VVCLI_DB_NAME=voteviewtest

passenv =
    *
usedevelop = false
isolated_build=true
whitelist_externals = poetry
commands =
         poetry install -v
         poetry run pytest --cov --cov-report=term-missing -vv {posargs} tests
deps =
     poetry

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py

[testenv:check]
skip_install = true
commands =
    poetry install -vv
    poetry build
    poetry run twine check dist/voteview-dev-*
    poetry run pylint src tests
    poetry run isort --verbose --check-only --diff --recursive src tests setup.py

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:doc]
deps =
     poetry
    -r{toxinidir}/docs/requirements.txt
commands =
    poetry install -v
    poetry run sphinx-apidoc -o docs/reference -f src
    poetry run sphinx-build {posargs:-E} -b html docs dist/docs
    poetry run sphinx-build -b linkcheck docs dist/docs

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report --fail-under=100
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage


[testenv:codecov]
skip_install=True
deps=
    codecov
commands=
    python -c 'import sys; print(sys.version)'
    codecov
